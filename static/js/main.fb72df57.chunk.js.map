{"version":3,"sources":["services/moviesApi.jsx","components/Search.jsx","components/MoviesList.jsx","components/MovieItem.jsx","components/App.jsx","index.jsx"],"names":["this","apiKey","baseUrl","imageBaseUrl","fetch","response","json","sessionID","query","page","sessionIDFiled","queryFiled","console","log","error","results","width","path","Search","fetchData","disabled","useState","searchValue","setSearchValue","input","useRef","useEffect","current","focus","deb","useMemo","debounce","className","ref","placeholder","value","onChange","event","target","handleSearchValue","MoviesList","children","currentPage","setPage","alertEmpty","React","Children","count","type","message","style","paddingLeft","fontSize","alertError","size","total","defaultProps","MovieItem","data","rateColor","setRateColor","title","posterPath","poster_path","releaseDate","release_date","overview","voteAverage","vote_average","Paragraph","Typography","img","src","moviesApi","getImagePath","alt","date","format","Date","cover","bodyStyle","padding","bordered","borderColor","ellipsis","rows","expandable","symbol","allowHalf","App","loading","setLoading","setSessionID","sort","setSort","setData","stateError","setError","Promise","resolve","then","getSearchList","createGuestSession","session","guest_session_id","window","scrollTo","Content","Layout","TabPane","Tabs","list","map","movie","key","id","centered","onTabClick","tab","spinning","ReactDOM","render","document","getElementById"],"mappings":"sUAoCe,M,WAnCb,aAAe,oBACbA,KAAKC,OAAS,mCACdD,KAAKE,QAAU,+BACfF,KAAKG,aAAe,6B,iMAIGC,MAAM,GAAD,OAAIJ,KAAKE,QAAT,qDAA6DF,KAAKC,S,cAAxFI,E,yBACCA,EAASC,Q,mLAGEC,G,kGAAWC,E,+BAAQ,IAAKC,E,+BAAO,EAC3CC,EAAiBH,EAAS,sBAAkBA,GAAc,GAC1DI,EAAuB,KAAVH,EAAeA,EAAQ,IAC1CI,QAAQC,IAAI,aAAcN,EAAWG,G,kBAGlBN,MAAM,GAAD,OACjBJ,KAAKE,QADY,iCACoBF,KAAKC,QADzB,OACkCS,EADlC,kBAC0DC,EAD1D,iBAC6EF,I,OADnGJ,E,kFAIO,CACLS,MAAK,KACLC,QAAS,K,iCAGNV,EAASC,Q,oJAGLU,EAAOC,GAElB,OAAgB,OAATA,EAAA,UAAmBjB,KAAKG,aAAxB,aAAyCa,GAAzC,OAAiDC,GADvC,mF,wBC1BN,SAASC,EAAT,GAA0C,IAAxBC,EAAuB,EAAvBA,UAAWC,EAAY,EAAZA,SAAY,EAChBC,mBAAS,IADO,mBAC/CC,EAD+C,KAClCC,EADkC,KAEhDC,EAAQC,iBAAO,MAErBC,qBAAU,WACRF,EAAMG,QAAQC,WAGhB,IAGMC,EAAMC,mBAAQ,kBAAMC,mBAASZ,EAAW,OAAM,CAACA,IACrD,OACE,kBAAC,IAAD,CACEa,UAAU,SACVC,IAAKT,EACLU,YAAY,oBACZd,SAAUA,EACVe,MAAOb,EACPc,SAAU,SAACC,IAXW,SAACA,GACzBd,EAAec,EAAMC,OAAOH,OAWxBI,CAAkBF,GAClBR,EAAIQ,EAAMC,OAAOH,U,sBCtBV,SAASK,EAAT,GAA2E,IAArD1B,EAAoD,EAApDA,MAAO2B,EAA6C,EAA7CA,SAAUT,EAAmC,EAAnCA,UAAWU,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,QAEtEC,EADcC,IAAMC,SAASC,MAAMN,GAAY,EACpB,KAC/B,kBAAC,IAAD,CAAOO,KAAK,OAAOC,QAAQ,mBAAmBC,MAAO,CAAEC,YAAa,GAAIC,SAAU,MAE9EC,EAAcvC,EAClB,kBAAC,IAAD,CAAOkC,KAAK,QAAQC,QAAQ,oCAAoCC,MAAO,CAAEC,YAAa,GAAIC,SAAU,MAD1E,KAG5B,OACE,oCACGC,GAAcT,GAAc,wBAAIZ,UAAWA,GAAYS,GACxD,kBAAC,IAAD,CAAYT,UAAU,aAAasB,KAAK,QAAQC,MAAO,GAAI5B,QAASe,EAAaN,SAAUO,KAIjGH,EAAWgB,aAAe,CACxB1C,MAAO,M,iDCdM,SAAS2C,EAAT,GAAyC,IAApBzB,EAAmB,EAAnBA,UAAW0B,EAAQ,EAARA,KAAQ,EACnBrC,mBAAS,SADU,mBAC9CsC,EAD8C,KACnCC,EADmC,KAG7CC,EAAmGH,EAAnGG,MAAoBC,EAA+EJ,EAA5FK,YAAuCC,EAAqDN,EAAnEO,aAA2BC,EAAwCR,EAAxCQ,SAAwBC,EAAgBT,EAA9BU,aACrEC,EAAcC,IAAdD,UAER3C,qBAAU,WACJyC,GAAe,GAAKA,EAAc,GACpCP,EAAa,WAEXO,GAAe,GAAKA,EAAc,GACpCP,EAAa,WAEXO,GAAe,GAAKA,EAAc,GACpCP,EAAa,WAEXO,GAAe,GACjBP,EAAa,aAEd,CAACO,IACJ,IAAMI,EAAM,yBAAKC,IAAKC,EAAUC,aAAa,IAAKZ,GAAaa,IAAKjB,EAAKG,QACnEe,EAAOZ,EAAca,YAAO,IAAIC,KAAKd,GAAc,gBAAkB,QAC3E,OACE,kBAAC,IAAD,CAAMhC,UAAWA,EAAW+C,MAAOR,EAAKS,UAAW,CAAEC,QAAS,aAAeC,UAAU,GACrF,yBAAKlD,UAAU,qBACb,wBAAIA,UAAU,oBAAoB6B,GAClC,yBAAK7B,UAAU,yBAAyBkB,MAAO,CAAEiC,YAAaxB,IAC3DQ,IAGL,uBAAGnC,UAAU,mBAAmB4C,GAChC,yBAAK5C,UAAU,0BACb,kBAAC,IAAD,CAAKA,UAAU,kBAAf,UACA,kBAAC,IAAD,CAAKA,UAAU,kBAAf,UAEF,kBAACqC,EAAD,CAAWrC,UAAU,sBAAsBoD,SAAU,CAAEC,KAAM,EAAGC,YAAY,EAAMC,OAAQ,SACvFrB,GAEH,kBAAC,IAAD,CAAMlC,UAAU,wBAAwBe,MAAO,GAAIZ,MAAOgC,EAAaqB,WAAS,KCnCvE,SAASC,IAAO,IAAD,EACEpE,oBAAS,GADX,mBACrBqE,EADqB,KACZC,EADY,OAEMtE,mBAAS,MAFf,mBAErBd,EAFqB,KAEVqF,EAFU,OAGJvE,mBAAS,UAHL,mBAGrBwE,EAHqB,KAGfC,EAHe,OAIJzE,mBAAS,IAJL,mBAIrBqC,EAJqB,KAIfqC,EAJe,OAKG1E,mBAAS,MALZ,mBAKrB2E,EALqB,KAKTC,EALS,OAMG5E,mBAAS,GANZ,mBAMrBqB,EANqB,KAMRC,EANQ,KAQ5B,SAASxB,EAAUX,GACjBmF,GAAW,GACXO,QAAQC,UACLC,MAAK,WACJ,OAAO3B,EAAU4B,cAAc9F,EAAWC,EAAOkC,MAElD0D,MAAK,YAAyB,IAAtBtF,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QAId,OAHA4E,GAAW,GACXI,EAAQhF,GACRkF,EAASnF,GACFC,KAIbW,qBAAU,WACRd,QAAQC,IAAI,kBACZqF,QAAQC,UACLC,MAAK,WACJ,OAAO3B,EAAU6B,wBAElBF,MAAK,SAACG,GACLX,EAAaW,EAAQC,uBAExB,IAEH9E,qBAAU,WACRd,QAAQC,IAAI,kBACZM,IACAsF,OAAOC,SAAS,EAAG,KAElB,CAAChE,EAAamD,IAtCW,IAwCpBc,EAAYC,IAAZD,QACAE,EAAYC,IAAZD,QACFE,EAAOrD,EAAKsD,KAAI,SAACC,GAAD,OACpB,wBAAIjF,UAAU,eAAekF,IAAKD,EAAME,IACtC,kBAAC1D,EAAD,CAAWzB,UAAU,YAAY0B,KAAMuD,QAK3C,OADArG,QAAQC,IAAI,UAEV,yBAAKmB,UAAU,OACb,kBAAC,IAAD,CAAQA,UAAU,UAChB,kBAAC2E,EAAD,CAAS3E,UAAU,WACjB,kBAAC,IAAD,CAAMA,UAAU,OAAOsB,KAAK,QAAQ8D,UAAQ,EAACC,WAAYvB,GACvD,kBAACe,EAAD,CAASS,IAAI,SAASJ,IAAI,WAC1B,kBAACL,EAAD,CAASS,IAAI,QAAQJ,IAAI,WAE3B,kBAAChG,EAAD,CAAQC,UAAWA,EAAWC,SAAmB,UAATyE,IACxC,kBAAC,IAAD,CAAM0B,SAAU7B,EAASpC,KAAK,SAC5B,kBAACd,EAAD,CAAYR,UAAU,aAAalB,MAAOkF,EAAYtD,YAAaA,EAAaC,QAASA,GACtFoE,OChEfS,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.fb72df57.chunk.js","sourcesContent":["class MoviesApi {\r\n  constructor() {\r\n    this.apiKey = 'e3cafce94e3a863833765608b4d85428';\r\n    this.baseUrl = 'https://api.themoviedb.org/3';\r\n    this.imageBaseUrl = 'https://image.tmdb.org/t/p';\r\n  }\r\n\r\n  async createGuestSession() {\r\n    const response = await fetch(`${this.baseUrl}/authentication/guest_session/new?api_key=${this.apiKey}`);\r\n    return response.json();\r\n  }\r\n\r\n  async getSearchList(sessionID, query = 'a', page = 1) {\r\n    const sessionIDFiled = sessionID ? `&seisson_id=${sessionID}` : '';\r\n    const queryFiled = query !== '' ? query : 'a';\r\n    console.log('ID in API:', sessionID, sessionIDFiled);\r\n    let response;\r\n    try {\r\n      response = await fetch(\r\n        `${this.baseUrl}/search/movie?api_key=${this.apiKey}${sessionIDFiled}&query=${queryFiled}&page=${page}`\r\n      );\r\n    } catch (error) {\r\n      return {\r\n        error,\r\n        results: [],\r\n      };\r\n    }\r\n    return response.json();\r\n  }\r\n\r\n  getImagePath(width, path) {\r\n    const errorImg = 'https://avatanplus.com/files/resources/original/57b1a0f710a0b1568ddcc51c.jpg';\r\n    return path !== null ? `${this.imageBaseUrl}/w${width}${path}` : errorImg;\r\n  }\r\n}\r\n\r\nexport default new MoviesApi();\r\n","import React, { useState, useRef, useEffect, useMemo } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { debounce } from 'lodash';\r\nimport { Input } from 'antd';\r\n\r\nexport default function Search({ fetchData, disabled }) {\r\n  const [searchValue, setSearchValue] = useState('');\r\n  const input = useRef(null);\r\n\r\n  useEffect(() => {\r\n    input.current.focus();\r\n  });\r\n\r\n  const handleSearchValue = (event) => {\r\n    setSearchValue(event.target.value);\r\n  };\r\n  const deb = useMemo(() => debounce(fetchData, 400), [fetchData]);\r\n  return (\r\n    <Input\r\n      className=\"Search\"\r\n      ref={input}\r\n      placeholder=\"Type to search...\"\r\n      disabled={disabled}\r\n      value={searchValue}\r\n      onChange={(event) => {\r\n        handleSearchValue(event);\r\n        deb(event.target.value);\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nSearch.propTypes = {\r\n  fetchData: PropTypes.func.isRequired,\r\n  disabled: PropTypes.bool.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Pagination, Alert } from 'antd';\r\n\r\nexport default function MoviesList({ error, children, className, currentPage, setPage }) {\r\n  const isDataEmpty = React.Children.count(children) > 0;\r\n  const alertEmpty = isDataEmpty ? null : (\r\n    <Alert type=\"info\" message=\"Movies not Found\" style={{ paddingLeft: 50, fontSize: 30 }} />\r\n  );\r\n  const alertError = !error ? null : (\r\n    <Alert type=\"error\" message=\"The Internet may not be available\" style={{ paddingLeft: 50, fontSize: 30 }} />\r\n  );\r\n  return (\r\n    <>\r\n      {alertError || alertEmpty || <ul className={className}>{children}</ul>}\r\n      <Pagination className=\"Pagination\" size=\"small\" total={50} current={currentPage} onChange={setPage} />\r\n    </>\r\n  );\r\n}\r\nMoviesList.defaultProps = {\r\n  error: null,\r\n};\r\n\r\nMoviesList.propTypes = {\r\n  error: PropTypes.oneOfType([PropTypes.string, PropTypes.any]),\r\n  children: PropTypes.arrayOf(PropTypes.element).isRequired,\r\n  className: PropTypes.string.isRequired,\r\n  currentPage: PropTypes.number.isRequired,\r\n  setPage: PropTypes.func.isRequired,\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Card, Tag, Typography, Rate } from 'antd';\r\nimport { format } from 'date-fns';\r\nimport moviesApi from '../services/moviesApi';\r\n\r\nexport default function MovieItem({ className, data }) {\r\n  const [rateColor, setRateColor] = useState('black');\r\n\r\n  const { title, poster_path: posterPath, release_date: releaseDate, overview, vote_average: voteAverage } = data;\r\n  const { Paragraph } = Typography;\r\n\r\n  useEffect(() => {\r\n    if (voteAverage >= 0 && voteAverage < 3) {\r\n      setRateColor('#E90000');\r\n    }\r\n    if (voteAverage >= 3 && voteAverage < 5) {\r\n      setRateColor('#E97E00');\r\n    }\r\n    if (voteAverage >= 5 && voteAverage < 7) {\r\n      setRateColor('#E9D100');\r\n    }\r\n    if (voteAverage >= 7) {\r\n      setRateColor('#66E900');\r\n    }\r\n  }, [voteAverage]);\r\n  const img = <img src={moviesApi.getImagePath(185, posterPath)} alt={data.title} />;\r\n  const date = releaseDate ? format(new Date(releaseDate), 'MMMM d, yyyy') : '-/-/-';\r\n  return (\r\n    <Card className={className} cover={img} bodyStyle={{ padding: '10px 20px' }} bordered={false}>\r\n      <div className=\"MovieItem__header\">\r\n        <h3 className=\"MovieItem__title\">{title}</h3>\r\n        <div className=\"MovieItem__rate-circle\" style={{ borderColor: rateColor }}>\r\n          {voteAverage}\r\n        </div>\r\n      </div>\r\n      <p className=\"MovieItem__date\">{date}</p>\r\n      <div className=\"MovieItem__tag-wrapper\">\r\n        <Tag className=\"MovieItem__tag\">Action</Tag>\r\n        <Tag className=\"MovieItem__tag\">Drama</Tag>\r\n      </div>\r\n      <Paragraph className=\"MovieItem__overview\" ellipsis={{ rows: 5, expandable: true, symbol: 'more' }}>\r\n        {overview}\r\n      </Paragraph>\r\n      <Rate className=\"MovieItem__rate-stars\" count={10} value={voteAverage} allowHalf />\r\n    </Card>\r\n  );\r\n}\r\n\r\nMovieItem.propTypes = {\r\n  className: PropTypes.string.isRequired,\r\n  data: PropTypes.shape({\r\n    title: PropTypes.string,\r\n    poster_path: PropTypes.string,\r\n    release_date: PropTypes.string,\r\n    overview: PropTypes.string,\r\n    vote_average: PropTypes.number,\r\n  }).isRequired,\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Layout, Tabs, Spin } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport './App.css';\r\nimport moviesApi from '../services/moviesApi';\r\nimport Search from './Search';\r\nimport MoviesList from './MoviesList';\r\nimport MovieItem from './MovieItem';\r\n\r\nexport default function App() {\r\n  const [loading, setLoading] = useState(true);\r\n  const [sessionID, setSessionID] = useState(null);\r\n  const [sort, setSort] = useState('search');\r\n  const [data, setData] = useState([]);\r\n  const [stateError, setError] = useState(null);\r\n  const [currentPage, setPage] = useState(1);\r\n\r\n  function fetchData(query) {\r\n    setLoading(true);\r\n    Promise.resolve()\r\n      .then(() => {\r\n        return moviesApi.getSearchList(sessionID, query, currentPage);\r\n      })\r\n      .then(({ error, results }) => {\r\n        setLoading(false);\r\n        setData(results);\r\n        setError(error);\r\n        return results;\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log('useEffect init');\r\n    Promise.resolve()\r\n      .then(() => {\r\n        return moviesApi.createGuestSession();\r\n      })\r\n      .then((session) => {\r\n        setSessionID(session.guest_session_id);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log('useEffect Page');\r\n    fetchData();\r\n    window.scrollTo(0, 0);\r\n    // eslint-disable-next-line\r\n  }, [currentPage, sort]);\r\n\r\n  const { Content } = Layout;\r\n  const { TabPane } = Tabs;\r\n  const list = data.map((movie) => (\r\n    <li className=\"li-MovieItem\" key={movie.id}>\r\n      <MovieItem className=\"MovieItem\" data={movie} />\r\n    </li>\r\n  ));\r\n\r\n  console.log('render');\r\n  return (\r\n    <div className=\"App\">\r\n      <Layout className=\"Layout\">\r\n        <Content className=\"Content\">\r\n          <Tabs className=\"Tabs\" size=\"large\" centered onTabClick={setSort}>\r\n            <TabPane tab=\"Search\" key=\"search\" />\r\n            <TabPane tab=\"Rated\" key=\"rated\" />\r\n          </Tabs>\r\n          <Search fetchData={fetchData} disabled={sort === 'rated'} />\r\n          <Spin spinning={loading} size=\"large\">\r\n            <MoviesList className=\"MoviesList\" error={stateError} currentPage={currentPage} setPage={setPage}>\r\n              {list}\r\n            </MoviesList>\r\n          </Spin>\r\n        </Content>\r\n      </Layout>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}